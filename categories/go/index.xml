<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Cheng Blog</title>
    <link>https://luckyliang.github.io/categories/go/</link>
    <description>Recent content in go on Cheng Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 12 Apr 2018 19:32:00 +0000</lastBuildDate>
    
	<atom:link href="https://luckyliang.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go 错误收集</title>
      <link>https://luckyliang.github.io/2018/04/12/goerror/</link>
      <pubDate>Thu, 12 Apr 2018 19:32:00 +0000</pubDate>
      
      <guid>https://luckyliang.github.io/2018/04/12/goerror/</guid>
      <description>ListenAndServe: listen tcp: address 3000: missing port in address exit status 1 学习go net/http包，代码如下 func getNews(writer http.ResponseWriter, request *http.Request) { writer.Write([]byte(&amp;quot;hello&amp;quot;)) } func main() { http.HandleFunc(&amp;quot;/getNews&amp;quot;,getNews) log.Println(&amp;quot;Listening....&amp;quot;) err := http.ListenAndServe(&amp;quot;3000&amp;quot;,nil) if err != nil { log.Fatal(&amp;quot;ListenAndServe: &amp;quot;, err) } } 执行命令 $ go run main.go</description>
    </item>
    
    <item>
      <title>go - 处理web请求</title>
      <link>https://luckyliang.github.io/2018/03/13/gorequest/</link>
      <pubDate>Tue, 13 Mar 2018 19:25:21 +0000</pubDate>
      
      <guid>https://luckyliang.github.io/2018/03/13/gorequest/</guid>
      <description>web应用非常重要的功能之一就是接受来自客户端发起的请求，然后返回数据以完成与客服端的数据交互，这篇文章主要记录go在处理这些数据请求时常用</description>
    </item>
    
    <item>
      <title>go - httprouter高性能Http框架</title>
      <link>https://luckyliang.github.io/2018/03/12/gohttprouter/</link>
      <pubDate>Mon, 12 Mar 2018 20:35:23 +0000</pubDate>
      
      <guid>https://luckyliang.github.io/2018/03/12/gohttprouter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>go - net/http的简单使用</title>
      <link>https://luckyliang.github.io/2018/03/10/gonet/</link>
      <pubDate>Sat, 10 Mar 2018 20:32:40 +0000</pubDate>
      
      <guid>https://luckyliang.github.io/2018/03/10/gonet/</guid>
      <description>Go 语言中处理 HTTP 请求主要跟两个东西相关：ServeMux 和 Handler。 ServrMux：本质上是一个 HTTP 请求路由器,它把收到的请求与一组预先</description>
    </item>
    
  </channel>
</rss>